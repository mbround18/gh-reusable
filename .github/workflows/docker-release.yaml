on:
  workflow_call:
    inputs:
      image:
        type: string
        required: true
        default: "mbround18/example"
        description: "Image Name"
      canary_label:
        type: string
        required: true
        default: "canary"
      dockerfile:
        type: string
        default: "./Dockerfile"
        description: "Dockerfile"
      ghcr:
        type: boolean
        default: false
        description: Release to GHCR?
      ghcr_username:
        type: string
        default: "mbround18"
        description: Who to log into ghcr as.zs
      dockerhub_username:
        type: string
        default: "mbround18"
        description: Who to log into dockerhub as.
    secrets:
      DOCKER_TOKEN:
        required: true
      GHCR_TOKEN:
        required: false

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ inputs.dockerhub_username }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Log in to GitHub Container Registry
        if: ${{ inputs.ghcr }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ inputs.ghcr_username }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Images List
        run: |
          IMAGES=("docker.io/${{ inputs.image }}")

          if [ "${{ inputs.ghcr }}" == "true" ]; then
              IMAGES+=("ghcr.io/${{ inputs.image }}")
          fi

          IMAGES_STR=$(IFS=,; echo "${IMAGES[*]}")

          echo "IMAGES=$IMAGES_STR" >> $GITHUB_ENV

      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGES }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          file: ${{ inputs.dockerfile }}
          push: ${{ github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, inputs.canary_label) }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ inputs.image }}:buildcache
          cache-to: type=registry,ref=${{ inputs.image }}:buildcache,mode=max
          build-args: |
            GITHUB_SHA=${GITHUB_SHA}
            GITHUB_REF=${GITHUB_REF}
            GITHUB_REPOSITORY=${GITHUB_REPOSITORY}
            IMAGE_VERSION=${{ steps.meta.outputs.version }}

      - name: Output image information
        run: |
          echo "Exported Image:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`${{ steps.meta.outputs.tags }}\`\`\`" >> $GITHUB_STEP_SUMMARY
