name: Docker Release Workflow
on:
  workflow_call:
    inputs:
      image:
        type: string
        required: true
        default: "mbround18/example"
        description: "Image Name"
      compose:
        type: boolean
        required: false
        default: false
        description: "Want us to pull information from a docker-compose file?"
      context:
        type: string
        required: false
        default: "."
        description: "Build context"
      canary_label:
        type: string
        required: false
        default: "canary"
      dockerfile:
        type: string
        default: "./Dockerfile"
        description: "Dockerfile"
      ghcr:
        type: boolean
        default: false
        description: Release to GHCR?
      ghcr_username:
        type: string
        default: "mbround18"
        description: Who to log into ghcr as.zs
      dockerhub_username:
        type: string
        default: "mbround18"
        description: Who to log into dockerhub as.
      working-directory:
        type: string
        default: "."
        description: "Working directory for the action"
      semver_prefix:
        type: string
        default: ""
        description: "Prefixer for semver, use this if you publish multiple artifacts like example-0.0.0"
    secrets:
      DOCKER_TOKEN:
        required: true
      GHCR_TOKEN:
        required: false

run-name: >
  Docker Release for ${{ inputs.image }} @
  ${{ github.event_name == 'pull_request' && format('PR #{}', github.event.pull_request.number) || github.ref_name }}z

jobs:
  release:
    name: >
      Docker Release for ${{ inputs.image }} @
      ${{ github.event_name == 'pull_request' && format('PR #{0}', github.event.pull_request.number) || github.ref_name }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.semver_prefix }}-${{ inputs.image }}-${{ github.event_name }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4

      - run: |
          echo "Running Docker Release Workflow"
          echo "Image: ${{ inputs.image }}"
          echo "Compose: ${{ inputs.compose }}"
          echo "Working Directory: ${{ inputs.working-directory }}"
          echo "Dockerfile: ${{ inputs.dockerfile }}"

      - uses: mbround18/gh-reusable/actions/install-cli@main
        with:
          repository: "mikefarah/yq"
          asset: "yq_linux_amd64"
          override-name: "yq"

      - id: semver
        uses: mbround18/gh-reusable/actions/semver@main
        with:
          prefix: ${{ inputs.semver_prefix }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ inputs.dockerhub_username }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Log in to GitHub Container Registry
        if: ${{ inputs.ghcr }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ inputs.ghcr_username }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Images List
        id: registries
        run: |
          IMAGES=("docker.io")
          if [ "${{ inputs.ghcr }}" == "true" ]; then
          IMAGES+=("ghcr.io")
          fi
          IMAGES_STR=$(IFS=,; echo "${IMAGES[*]}")
          echo "list=$IMAGES_STR" >> $GITHUB_OUTPUT

      - name: Build and Push Docker Image
        uses: mbround18/gh-reusable/actions/docker-build@main
        env:
          BUILD_ARG_GITHUB_SHA: ${GITHUB_SHA}
          BUILD_ARG_GITHUB_REF: ${GITHUB_REF}
          BUILD_ARG_GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}
        with:
          image: ${{ inputs.image }}
          dockerfile: ${{ inputs.dockerfile }}
          context: ${{ inputs.working-directory }}/${{ inputs.context }}
          version: ${{ steps.semver.outputs.new_version }}
          canary_label: ${{ inputs.canary_label }}
          platforms: "linux/amd64,linux/arm64"
          registries: ${{ steps.registries.outputs.list }}
